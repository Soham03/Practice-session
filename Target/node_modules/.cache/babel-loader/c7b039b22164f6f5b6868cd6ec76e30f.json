{"ast":null,"code":"var _jsxFileName = \"/Users/Soham/Desktop/13-finished/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext, useRef } from 'react';\nimport Card from '../UI/Card/Card';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport Input from '../UI/Input/Input';\nimport classes from './Login.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  function containsSpecialChars(str) {\n    const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n    return specialChars.test(str);\n  }\n\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 7 && containsSpecialChars(action.val)\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 7 && containsSpecialChars(state.val)\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n  const authCtx = useContext(AuthContext);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n    return () => {\n      console.log('EFFECT CLEANUP');\n    };\n  }, []);\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('Checking form validity!');\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setFormIsValid(\n    //   event.target.value.includes('@') && passwordState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (formIsValid) {\n      authCtx.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {\n      emailInputRef.current.focus();\n    } else {\n      passwordInputRef.current.focus();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: emailInputRef,\n        id: \"email\",\n        label: \"E-Mail\",\n        type: \"email\",\n        isValid: emailIsValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: passwordInputRef,\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        isValid: passwordIsValid,\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"2vfqirCvDOdCVLNShmtKBKk9PI4=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/Soham/Desktop/13-finished/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","useContext","useRef","Card","Button","AuthContext","Input","classes","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","containsSpecialChars","str","specialChars","test","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","authCtx","emailInputRef","passwordInputRef","console","log","emailIsValid","passwordIsValid","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","current","focus","login","actions","btn"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useReducer,\n  useContext,\n  useRef\n} from 'react';\n\n\n\nimport Card from '../UI/Card/Card';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport Input from '../UI/Input/Input';\nimport classes from './Login.module.css';\n\n\nconst emailReducer = (state, action) => {\n\n  if (action.type === 'USER_INPUT') {\n    return { value: action.val, isValid: action.val.includes('@')  };\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return { value: state.value, isValid: state.value.includes('@') };\n  }\n  return { value: '', isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n\n    \n  function containsSpecialChars(str) {\n    const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n    return specialChars.test(str);\n  }\n\n  if (action.type === 'USER_INPUT') {\n    return { value: action.val, isValid: action.val.trim().length > 7 && containsSpecialChars(action.val) };\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return { value: state.value, isValid: state.value.trim().length > 7 && containsSpecialChars(state.val)};\n  }\n  return { value: '', isValid: false };\n};\n\nconst Login = (props) => {\n  \n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null,\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null,\n  });\n\n  const authCtx = useContext(AuthContext);\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n\n    return () => {\n      console.log('EFFECT CLEANUP');\n    };\n  }, []);\n\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('Checking form validity!');\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n\n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({ type: 'USER_INPUT', val: event.target.value });\n\n    // setFormIsValid(\n    //   event.target.value.includes('@') && passwordState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({ type: 'USER_INPUT', val: event.target.value });\n\n    // setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({ type: 'INPUT_BLUR' });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({ type: 'INPUT_BLUR' });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (formIsValid) {\n      authCtx.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {\n      emailInputRef.current.focus();\n    } else {\n      passwordInputRef.current.focus();\n    }\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input\n          ref={emailInputRef}\n          id=\"email\"\n          label=\"E-Mail\"\n          type=\"email\"\n          isValid={emailIsValid}\n          value={emailState.value}\n          onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n        />\n        <Input\n          ref={passwordInputRef}\n          id=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          isValid={passwordIsValid}\n          value={passwordState.value}\n          onChange={passwordChangeHandler}\n          onBlur={validatePasswordHandler}\n        />\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}